{"version":3,"sources":["nearest-periodic-value.js"],"names":[],"mappings":"WAAU,IAAI,EAAE,OAAO,EAAE;AACvB;AACE;;AAEA;;AAEA;;EAEH,mBAAmB;AAClB;;6BAEA,UAA8B,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE;;AAEjD;;;AAGA,gDAA0C,MAAM,CAAC,CAAC,CAAC;;;AAGnD;;;AAGA;;;AAGA;;;;;;AAMF","file":"nearest-periodic-value.js","sourcesContent":["(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== 'undefined') {\n    module.exports = factory();\n  } else {\n    root.nearestPeriodicValue = factory();\n  }\n})(this, function() {\n  'use strict';\n\n  function nearestPeriodicValue(point, test, period) {\n    // The distance between the test and the point\n    var diff = test - point;\n  \n    // The number of periods between the point and test\n    var periodDiff = Math.floor(Math.abs(diff/period));\n  \n    // The number of excessive units between the point and test\n    var excess = periodDiff * period;\n  \n    // Whether our excess is in front of or behind the test\n    var direction = diff > 0 ? -1 : 1;\n  \n    // The solution is our test without the excess\n    return test + direction * excess;\n  }\n  \n  export default nearestPeriodicValue;\n  \n  \n  return nearestPeriodicValue;\n});\n"],"sourceRoot":"/source/"}